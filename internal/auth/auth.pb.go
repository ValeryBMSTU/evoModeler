// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/auth.proto

/*
Package auth_service is a generated protocol buffer package.

It is generated from these files:
	protos/auth.proto

It has these top-level messages:
	CURequest
	CUResponse
	CSRequest
	CSResponse
	RSRequest
	RSResponse
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CURequest struct {
	Login string `protobuf:"bytes,1,opt,name=login" json:"login,omitempty"`
	Pass  string `protobuf:"bytes,2,opt,name=pass" json:"pass,omitempty"`
}

func (m *CURequest) Reset()                    { *m = CURequest{} }
func (m *CURequest) String() string            { return proto.CompactTextString(m) }
func (*CURequest) ProtoMessage()               {}
func (*CURequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CURequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *CURequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type CUResponse struct {
	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
}

func (m *CUResponse) Reset()                    { *m = CUResponse{} }
func (m *CUResponse) String() string            { return proto.CompactTextString(m) }
func (*CUResponse) ProtoMessage()               {}
func (*CUResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CUResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type CSRequest struct {
	Login string `protobuf:"bytes,1,opt,name=login" json:"login,omitempty"`
	Pass  string `protobuf:"bytes,2,opt,name=pass" json:"pass,omitempty"`
}

func (m *CSRequest) Reset()                    { *m = CSRequest{} }
func (m *CSRequest) String() string            { return proto.CompactTextString(m) }
func (*CSRequest) ProtoMessage()               {}
func (*CSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CSRequest) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *CSRequest) GetPass() string {
	if m != nil {
		return m.Pass
	}
	return ""
}

type CSResponse struct {
	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *CSResponse) Reset()                    { *m = CSResponse{} }
func (m *CSResponse) String() string            { return proto.CompactTextString(m) }
func (*CSResponse) ProtoMessage()               {}
func (*CSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CSResponse) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type RSRequest struct {
	SessionId int64 `protobuf:"varint,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (m *RSRequest) Reset()                    { *m = RSRequest{} }
func (m *RSRequest) String() string            { return proto.CompactTextString(m) }
func (*RSRequest) ProtoMessage()               {}
func (*RSRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RSRequest) GetSessionId() int64 {
	if m != nil {
		return m.SessionId
	}
	return 0
}

type RSResponse struct {
	IsErr bool `protobuf:"varint,1,opt,name=is_err,json=isErr" json:"is_err,omitempty"`
}

func (m *RSResponse) Reset()                    { *m = RSResponse{} }
func (m *RSResponse) String() string            { return proto.CompactTextString(m) }
func (*RSResponse) ProtoMessage()               {}
func (*RSResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *RSResponse) GetIsErr() bool {
	if m != nil {
		return m.IsErr
	}
	return false
}

func init() {
	proto.RegisterType((*CURequest)(nil), "auth_service.CURequest")
	proto.RegisterType((*CUResponse)(nil), "auth_service.CUResponse")
	proto.RegisterType((*CSRequest)(nil), "auth_service.CSRequest")
	proto.RegisterType((*CSResponse)(nil), "auth_service.CSResponse")
	proto.RegisterType((*RSRequest)(nil), "auth_service.RSRequest")
	proto.RegisterType((*RSResponse)(nil), "auth_service.RSResponse")
}

func init() { proto.RegisterFile("protos/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 305 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0xd2, 0xc1, 0x4a, 0xf3, 0x40,
	0x10, 0x00, 0xe0, 0xbf, 0xbf, 0x6d, 0x35, 0x83, 0x1e, 0x5c, 0x94, 0x16, 0x41, 0x90, 0x88, 0x20,
	0x0a, 0x09, 0x28, 0x22, 0x1e, 0xdb, 0xea, 0xa1, 0x87, 0x5e, 0x36, 0xd6, 0x83, 0x97, 0x92, 0x36,
	0x43, 0xb3, 0x90, 0x66, 0xe3, 0xcc, 0x26, 0xe0, 0x83, 0xfa, 0x3e, 0x92, 0x4d, 0x69, 0x23, 0x25,
	0x88, 0xb7, 0x99, 0xc9, 0xcc, 0x37, 0x61, 0x58, 0x38, 0xce, 0x48, 0x1b, 0xcd, 0x7e, 0x98, 0x9b,
	0xd8, 0xb3, 0xb1, 0x38, 0x2c, 0xe3, 0x19, 0x23, 0x15, 0x6a, 0x81, 0xee, 0x03, 0x38, 0xa3, 0xa9,
	0xc4, 0x8f, 0x1c, 0xd9, 0x88, 0x13, 0xe8, 0x24, 0x7a, 0xa9, 0xd2, 0x7e, 0xeb, 0xa2, 0x75, 0xed,
	0xc8, 0x2a, 0x11, 0x02, 0xda, 0x59, 0xc8, 0xdc, 0xff, 0x6f, 0x8b, 0x36, 0x76, 0xaf, 0x00, 0xca,
	0x31, 0xce, 0x74, 0xca, 0x28, 0x7a, 0xb0, 0x9f, 0x33, 0xd2, 0x4c, 0x45, 0x76, 0x72, 0x4f, 0x76,
	0xcb, 0x74, 0x1c, 0x59, 0x3d, 0xf8, 0xbb, 0x7e, 0x0b, 0x50, 0x8e, 0xad, 0xf5, 0x73, 0x00, 0x46,
	0x66, 0xa5, 0xd3, 0xed, 0x02, 0x67, 0x5d, 0x19, 0x47, 0xee, 0x0d, 0x38, 0x72, 0xb3, 0xe3, 0x97,
	0xde, 0x4b, 0x00, 0xb9, 0x85, 0x4f, 0xa1, 0xab, 0x78, 0x86, 0x44, 0xb6, 0xf1, 0x40, 0x76, 0x14,
	0xbf, 0x10, 0xdd, 0x7d, 0xb5, 0xa0, 0x3d, 0xc8, 0x4d, 0x2c, 0x06, 0x00, 0x23, 0xc2, 0xd0, 0xe0,
	0x94, 0x91, 0x44, 0xcf, 0xab, 0x1f, 0xce, 0xdb, 0x5c, 0xed, 0xac, 0xbf, 0xfb, 0xa1, 0x5a, 0xe0,
	0xfe, 0x13, 0xcf, 0x70, 0x54, 0x11, 0x41, 0xf5, 0x0f, 0x3b, 0x4a, 0xd0, 0xa4, 0x04, 0x3f, 0x15,
	0x89, 0x2b, 0x5d, 0x34, 0x29, 0xb2, 0x49, 0x91, 0x35, 0x65, 0xf8, 0xf4, 0xfe, 0xb8, 0x54, 0x26,
	0xce, 0xe7, 0xde, 0x42, 0xaf, 0xfc, 0xb7, 0x30, 0x41, 0xfa, 0x1c, 0x4e, 0x82, 0xd7, 0xa9, 0x8f,
	0x85, 0x9e, 0xe8, 0x08, 0x13, 0x24, 0x5f, 0xa5, 0x06, 0x29, 0x0d, 0x13, 0xbf, 0xee, 0xcc, 0xbb,
	0xf6, 0xe9, 0xdc, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x38, 0x72, 0x95, 0x71, 0x4f, 0x02, 0x00,
	0x00,
}
